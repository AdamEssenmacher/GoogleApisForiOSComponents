<Project>
  <PropertyGroup>
    <_FirebaseCoreAssemblyName>Firebase.Core, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null</_FirebaseCoreAssemblyName>
    <_GoogleAppMeasurementItemsFolder>GAppM-10.20.0</_GoogleAppMeasurementItemsFolder>
    <_GoogleAppMeasurementSDKBaseFolder>$(XamarinBuildDownloadDir)$(_GoogleAppMeasurementItemsFolder)\GoogleAppMeasurement-10.20.0\Frameworks\</_GoogleAppMeasurementSDKBaseFolder>
  </PropertyGroup>
  <!-- *.tar.gz URLs can be found in the podspec: https://github.com/CocoaPods/Specs/tree/master/Specs/e/3/b/GoogleAppMeasurement -->	
  <ItemGroup Condition="('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True')">
    <XamarinBuildDownload Include="$(_GoogleAppMeasurementItemsFolder)">
      <Url>https://dl.google.com/firebase/ios/analytics/3fcc7b954e5d5458/GoogleAppMeasurement-10.20.0.tar.gz</Url>
      <Kind>Tgz</Kind>
    </XamarinBuildDownload>
    <XamarinBuildRestoreResources Include="_FCrDownloadedItems" />
  </ItemGroup>
  <Target Name="_FCrDownloadedItems">
    <ItemGroup Condition="'$(FirebaseWithoutAdIdSupport)'!='True'">
      <!-- From https://dl.google.com/firebase/ios/analytics/3fcc7b954e5d5458/GoogleAppMeasurement-10.20.0.tar.gz -->
      <NativeReference Include="$(_GoogleAppMeasurementSDKBaseFolder)GoogleAppMeasurement.xcframework">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
        <LinkerFlags>-ObjC -lc++ -lsqlite3 -lz</LinkerFlags>
        <Frameworks>StoreKit</Frameworks>
      </NativeReference>
    </ItemGroup>
    <ItemGroup Condition="'$(FirebaseWithoutAdIdSupport)'=='True'">
      <!-- From https://dl.google.com/firebase/ios/analytics/3fcc7b954e5d5458/GoogleAppMeasurement-10.20.0.tar.gz -->
      <NativeReference Include="$(_GoogleAppMeasurementSDKBaseFolder)GoogleAppMeasurementWithoutAdIdSupport.xcframework">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
        <LinkerFlags>-ObjC -lc++ -lsqlite3 -lz</LinkerFlags>
        <Frameworks>StoreKit</Frameworks>
      </NativeReference>
    </ItemGroup>
  </Target>
  <PropertyGroup>
    <_FirebaseCoreId>FirebaseCore</_FirebaseCoreId>
    <_GTMSessionFetcherId>GTMSessionFetcher</_GTMSessionFetcherId>
    <_GoogleDataTransportId>GoogleDataTransport</_GoogleDataTransportId>
    <_FBLPromisesId>FBLPromises</_FBLPromisesId>
    <_GoogleUtilitiesId>GoogleUtilities</_GoogleUtilitiesId>
    <_nanopbId>nanopb</_nanopbId>
    <_leveldbId>leveldb</_leveldbId>
    <_FirebaseAppCheckInteropId>FirebaseAppCheckInterop</_FirebaseAppCheckInteropId>
    <_FirebaseAuthInteropId>FirebaseAuthInterop</_FirebaseAuthInteropId>
    <_FirebaseCoreExtensionId>FirebaseCoreExtension</_FirebaseCoreExtensionId>
    <_FirebaseCoreInternalId>FirebaseCoreInternal</_FirebaseCoreInternalId>
    <_FirebaseMessagingInteropId>FirebaseMessagingInterop</_FirebaseMessagingInteropId>
    <_FirebaseSharedSwiftId>FirebaseSharedSwift</_FirebaseSharedSwiftId>
    <_PromisesId>Promises</_PromisesId>
    <_FirebaseSessionsId>FirebaseSessions</_FirebaseSessionsId>
  </PropertyGroup>
  <ItemGroup Condition="('$(OutputType)' != 'Library' OR '$(IsAppExtension)' == 'True') AND ('$(TargetFrameworks)' == '' AND '$(TargetFramework)' == '')">
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseCore.xcframework">
      <_Id>$(_FirebaseCoreId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\GTMSessionFetcher.xcframework">
      <_Id>$(_GTMSessionFetcherId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\GoogleDataTransport.xcframework">
      <_Id>$(_GoogleDataTransportId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FBLPromises.xcframework">
      <_Id>$(_FBLPromisesId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\GoogleUtilities.xcframework">
      <_Id>$(_GoogleUtilitiesId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\nanopb.xcframework">
      <_Id>$(_nanopbId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\leveldb.xcframework">
      <_Id>$(_leveldbId)</_Id>
    </_NativeReference>
  	<_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseAppCheckInterop.xcframework">
	  <_Id>$(_FirebaseAppCheckInteropId)</_Id>
  	</_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseAuthInterop.xcframework">
	  <_Id>$(_FirebaseAuthInteropId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseCoreExtension.xcframework">
	  <_Id>$(_FirebaseCoreExtensionId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseCoreInternal.xcframework">
	  <_Id>$(_FirebaseCoreInternalId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseMessagingInterop.xcframework">
	  <_Id>$(_FirebaseMessagingInteropId)</_Id>
    </_NativeReference>
    <_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseSharedSwift.xcframework">
	  <_Id>$(_FirebaseSharedSwiftId)</_Id>
    </_NativeReference>
  	<_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\Promises.xcframework">
	  <_Id>$(_PromisesId)</_Id>
  	</_NativeReference>
  	<_NativeReference Include="$(MSBuildThisFileDirectory)..\lib\xamarinios10\Firebase.Core.resources\FirebaseSessions.xcframework">
	  <_Id>$(_FirebaseSessionsId)</_Id>
  	</_NativeReference>
  </ItemGroup>
  <Target Name="_ResolveNativeReferencesForFirebaseCore" 
          BeforeTargets="ResolveNativeReferences"
          Condition="('$(TargetFrameworks)' == '' AND '$(TargetFramework)' == '') OR '$(IsBindingProject)' == 'true'">
    <ItemGroup>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseCoreId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
        <Frameworks>Foundation UIKit</Frameworks>
      </_NativeReference>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_GTMSessionFetcherId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
      </_NativeReference>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_GoogleDataTransportId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
        <Frameworks>SystemConfiguration CoreTelephony</Frameworks>
      </_NativeReference>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FBLPromisesId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
      </_NativeReference>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_GoogleUtilitiesId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
        <Frameworks>Security SystemConfiguration</Frameworks>
      </_NativeReference>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_nanopbId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
      </_NativeReference>
      <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_leveldbId)'">
        <Kind>Framework</Kind>
        <SmartLink>True</SmartLink>
        <ForceLoad>True</ForceLoad>
      </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseAppCheckInteropId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseAuthInteropId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseCoreExtensionId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseCoreInternalId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseMessagingInteropId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseSharedSwiftId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_ProimisesId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
	  <_NativeReference Update="@(_NativeReference)" Condition="'%(_NativeReference._Id)' == '$(_FirebaseSessionsId)'">
		<Kind>Framework</Kind>
		<SmartLink>True</SmartLink>
		<ForceLoad>True</ForceLoad>
	  </_NativeReference>
      <NativeReference Include="@(_NativeReference)" />
    </ItemGroup>
  </Target>

  <!--  -->
  <!-- Targets to strip bitcode from specified frameworks -->
  <!--  -->

  <!-- Framework names to strip bitcode -->
  <ItemGroup Condition="('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True')">
    <_FrameworkNamesToStripBitcode Include="GoogleAppMeasurement" Condition="'$(FirebaseWithoutAdIdSupport)'!='True'" />
    <_FrameworkNamesToStripBitcode Include="GoogleAppMeasurementIdentitySupport" Condition="'$(FirebaseWithoutAdIdSupport)'=='True'" />
  </ItemGroup>

  <PropertyGroup>
    <!-- Properties used to strip bitcode from frameworks when using Visual Studio for Mac -->
    <_FirebaseStripBitcodeFromFrameworksMasterAfterTargets Condition="'$(OS)'=='Unix'">_ExpandNativeReferences</_FirebaseStripBitcodeFromFrameworksMasterAfterTargets>
    <_FirebaseStripBitcodeFromFrameworksMasterDependsOnTargets Condition="'$(OS)'=='Unix'">_FirebaseStripBitcodeFromFrameworksOnMac</_FirebaseStripBitcodeFromFrameworksMasterDependsOnTargets>

    <!-- Properties used to strip bitcode from frameworks when using Visual Studio for Windows -->
    <_FirebaseStripBitcodeFromFrameworksMasterAfterTargets Condition="'$(OS)'!='Unix'">_ComputeFrameworkFilesToPublish</_FirebaseStripBitcodeFromFrameworksMasterAfterTargets>
    <_FirebaseStripBitcodeFromFrameworksMasterDependsOnTargets Condition="'$(OS)'!='Unix'">_FirebaseStripBitcodeFromFrameworksOnWindows</_FirebaseStripBitcodeFromFrameworksMasterDependsOnTargets>
  </PropertyGroup>
  
  <Target Name="_FirebaseStripBitcodeFromFrameworksMasterTarget" 
          Condition="'$(_FirebaseStripBitcodeFromFrameworksMasterDependsOnTargets)'!='' AND ('$(OutputType)'!='Library' OR '$(IsAppExtension)'=='True') AND '$(_SdkIsSimulator)'=='False' AND @(_FrameworkNamesToStripBitcode->Count()) != 0"
          AfterTargets="$(_FirebaseStripBitcodeFromFrameworksMasterAfterTargets)"
          DependsOnTargets="$(_FirebaseStripBitcodeFromFrameworksMasterDependsOnTargets)" />

  <Target Name="_FirebaseStripBitcodeFromFrameworksOnMac">
    <!-- Get the frameworks to strip bitcode -->
    <FindInList 
      List="@(_FrameworkNativeReference)"
      ItemSpecToFind="%(_FrameworkNamesToStripBitcode.Identity)"
      MatchFileNameOnly="True">
      <Output TaskParameter="ItemFound" ItemName="_FrameworksToStripBitcode"/>
    </FindInList>

    <!-- Find the bitcode_strip command -->
    <Exec Command="xcrun -find bitcode_strip" ConsoleToMSBuild="true">
      <Output TaskParameter="ConsoleOutput" PropertyName="_BitcodeStripCommand" />
    </Exec>

    <!-- Strip the bitcode from frameworks -->
    <Exec Command="$(_BitcodeStripCommand) %(_FrameworksToStripBitcode.Identity) -r -o %(_FrameworksToStripBitcode.Identity)" />
  </Target>

  <Target Name="_FirebaseStripBitcodeFromFrameworksOnWindows"
          Condition="'$(IsMacEnabled)'=='true'">
    <!-- Get the frameworks to strip bitcode -->
    <FindInList 
      CaseSensitive="false"
      List="@(_FrameworkNativeReference)"
      ItemSpecToFind="%(_FrameworkNamesToStripBitcode.Identity)"
      MatchFileNameOnly="True">
      <Output TaskParameter="ItemFound" ItemName="_FrameworksToStripBitcode"/>
    </FindInList>

    <!-- Strip the bitcode from frameworks -->
    <Exec SessionId="$(BuildSessionId)"
          Command="&quot;%24(xcrun -find bitcode_strip)&quot; %(_FrameworksToStripBitcode.Identity) -r -o %(_FrameworksToStripBitcode.Identity)" />

    <CopyFileFromBuildServer 
      SessionId="$(BuildSessionId)" 
      File="%(_FrameworksToStripBitcode.Identity)" 
      TargetFile="%(_FrameworksToStripBitcode.Identity)" />    
  </Target>
</Project>
